// Mocks generated by Mockito 5.4.5 from annotations
// in tanami_capital/test/mock_specs.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i2;
import 'dart:math' as _i25;
import 'dart:ui' as _i12;

import 'package:dartz/dartz.dart' as _i4;
import 'package:dio/dio.dart' as _i11;
import 'package:dio/src/adapter.dart' as _i7;
import 'package:dio/src/cancel_token.dart' as _i22;
import 'package:dio/src/dio_mixin.dart' as _i9;
import 'package:dio/src/options.dart' as _i6;
import 'package:dio/src/response.dart' as _i10;
import 'package:dio/src/transformer.dart' as _i8;
import 'package:flutter/foundation.dart' as _i21;
import 'package:flutter_secure_storage/flutter_secure_storage.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i16;
import 'package:tanami_capital/core/api/api_helper.dart' as _i15;
import 'package:tanami_capital/core/api/language_interceptor.dart' as _i23;
import 'package:tanami_capital/core/api/token_interceptor.dart' as _i24;
import 'package:tanami_capital/core/cache/cache_helper.dart' as _i13;
import 'package:tanami_capital/core/cache/secure_cache_helper.dart' as _i17;
import 'package:tanami_capital/core/errors/base.dart' as _i18;
import 'package:tanami_capital/features/auth/data/datasource/auth_datasource.dart'
    as _i20;
import 'package:tanami_capital/features/auth/data/models/auth_response_model.dart'
    as _i5;
import 'package:tanami_capital/features/auth/domain/entities/auth_response_entity.dart'
    as _i19;
import 'package:tanami_capital/features/auth/domain/repositories/auth_repository.dart'
    as _i14;
import 'package:tanami_capital/features/auth/domain/usecases/forget_password_usecase.dart'
    as _i29;
import 'package:tanami_capital/features/auth/domain/usecases/login_usecase.dart'
    as _i26;
import 'package:tanami_capital/features/auth/domain/usecases/reset_password_usecase.dart'
    as _i28;
import 'package:tanami_capital/features/auth/domain/usecases/signup_usecase.dart'
    as _i27;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFuture_0<T1> extends _i1.SmartFake implements _i2.Future<T1> {
  _FakeFuture_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFlutterSecureStorage_1 extends _i1.SmartFake
    implements _i3.FlutterSecureStorage {
  _FakeFlutterSecureStorage_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_2<L, R> extends _i1.SmartFake implements _i4.Either<L, R> {
  _FakeEither_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthResponseModel_3 extends _i1.SmartFake
    implements _i5.AuthResponseModel {
  _FakeAuthResponseModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIOSOptions_4 extends _i1.SmartFake implements _i3.IOSOptions {
  _FakeIOSOptions_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAndroidOptions_5 extends _i1.SmartFake
    implements _i3.AndroidOptions {
  _FakeAndroidOptions_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLinuxOptions_6 extends _i1.SmartFake implements _i3.LinuxOptions {
  _FakeLinuxOptions_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWindowsOptions_7 extends _i1.SmartFake
    implements _i3.WindowsOptions {
  _FakeWindowsOptions_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWebOptions_8 extends _i1.SmartFake implements _i3.WebOptions {
  _FakeWebOptions_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMacOsOptions_9 extends _i1.SmartFake implements _i3.MacOsOptions {
  _FakeMacOsOptions_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeBaseOptions_10 extends _i1.SmartFake implements _i6.BaseOptions {
  _FakeBaseOptions_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeHttpClientAdapter_11 extends _i1.SmartFake
    implements _i7.HttpClientAdapter {
  _FakeHttpClientAdapter_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTransformer_12 extends _i1.SmartFake implements _i8.Transformer {
  _FakeTransformer_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptors_13 extends _i1.SmartFake implements _i9.Interceptors {
  _FakeInterceptors_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeResponse_14<T1> extends _i1.SmartFake implements _i10.Response<T1> {
  _FakeResponse_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDio_15 extends _i1.SmartFake implements _i11.Dio {
  _FakeDio_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeLocale_16 extends _i1.SmartFake implements _i12.Locale {
  _FakeLocale_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeCacheHelper_17 extends _i1.SmartFake implements _i13.CacheHelper {
  _FakeCacheHelper_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeIterator_18<E> extends _i1.SmartFake implements Iterator<E> {
  _FakeIterator_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInterceptor_19 extends _i1.SmartFake implements _i9.Interceptor {
  _FakeInterceptor_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAuthRepository_20 extends _i1.SmartFake
    implements _i14.AuthRepository {
  _FakeAuthRepository_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [ApiHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiHelper<T> extends _i1.Mock implements _i15.ApiHelper<T> {
  MockApiHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<T> get(
    String? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [url],
          {#headers: headers},
        ),
        returnValue: _i16.ifNotNull(
              _i16.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #get,
                  [url],
                  {#headers: headers},
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #get,
                [url],
                {#headers: headers},
              ),
            ),
      ) as _i2.Future<T>);

  @override
  _i2.Future<T> post(
    String? url, {
    Map<String, String>? headers,
    dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [url],
          {
            #headers: headers,
            #body: body,
          },
        ),
        returnValue: _i16.ifNotNull(
              _i16.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {
                    #headers: headers,
                    #body: body,
                  },
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #post,
                [url],
                {
                  #headers: headers,
                  #body: body,
                },
              ),
            ),
      ) as _i2.Future<T>);

  @override
  _i2.Future<T> put(
    String? url, {
    Map<String, String>? headers,
    dynamic body,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [url],
          {
            #headers: headers,
            #body: body,
          },
        ),
        returnValue: _i16.ifNotNull(
              _i16.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {
                    #headers: headers,
                    #body: body,
                  },
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #put,
                [url],
                {
                  #headers: headers,
                  #body: body,
                },
              ),
            ),
      ) as _i2.Future<T>);

  @override
  _i2.Future<T> delete(
    String? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [url],
          {#headers: headers},
        ),
        returnValue: _i16.ifNotNull(
              _i16.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers},
                ),
              ),
              (T v) => _i2.Future<T>.value(v),
            ) ??
            _FakeFuture_0<T>(
              this,
              Invocation.method(
                #delete,
                [url],
                {#headers: headers},
              ),
            ),
      ) as _i2.Future<T>);
}

/// A class which mocks [CacheHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockCacheHelper extends _i1.Mock implements _i13.CacheHelper {
  MockCacheHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<Set<String>> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: _i2.Future<Set<String>>.value(<String>{}),
      ) as _i2.Future<Set<String>>);

  @override
  _i2.Future<bool> has(String? key) => (super.noSuchMethod(
        Invocation.method(
          #has,
          [key],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<void> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<String> readString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readString,
          [key],
        ),
        returnValue: _i2.Future<String>.value(_i16.dummyValue<String>(
          this,
          Invocation.method(
            #readString,
            [key],
          ),
        )),
      ) as _i2.Future<String>);

  @override
  _i2.Future<String> readStringOr(
    String? key,
    String? fallback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #readStringOr,
          [
            key,
            fallback,
          ],
        ),
        returnValue: _i2.Future<String>.value(_i16.dummyValue<String>(
          this,
          Invocation.method(
            #readStringOr,
            [
              key,
              fallback,
            ],
          ),
        )),
      ) as _i2.Future<String>);

  @override
  _i2.Future<String?> readStringOrNull(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readStringOrNull,
          [key],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<void> writeString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<Map<dynamic, dynamic>> readMap(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readMap,
          [key],
        ),
        returnValue:
            _i2.Future<Map<dynamic, dynamic>>.value(<dynamic, dynamic>{}),
      ) as _i2.Future<Map<dynamic, dynamic>>);

  @override
  _i2.Future<Map<dynamic, dynamic>?> readMapOrNull(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #readMapOrNull,
          [key],
        ),
        returnValue: _i2.Future<Map<dynamic, dynamic>?>.value(),
      ) as _i2.Future<Map<dynamic, dynamic>?>);

  @override
  _i2.Future<void> writeMap(
    String? key,
    Map<dynamic, dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeMap,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<bool?> readBoolOrNull(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readBoolOrNull,
          [key],
        ),
        returnValue: _i2.Future<bool?>.value(),
      ) as _i2.Future<bool?>);

  @override
  _i2.Future<bool> readBoolOr(
    String? key,
    bool? or,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBoolOr,
          [
            key,
            or,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<void> writeBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [SecureCacheHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockSecureCacheHelper extends _i1.Mock implements _i17.SecureCacheHelper {
  MockSecureCacheHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.FlutterSecureStorage get db => (super.noSuchMethod(
        Invocation.getter(#db),
        returnValue: _FakeFlutterSecureStorage_1(
          this,
          Invocation.getter(#db),
        ),
      ) as _i3.FlutterSecureStorage);

  @override
  _i2.Future<void> clear() => (super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<Set<String>> getKeys() => (super.noSuchMethod(
        Invocation.method(
          #getKeys,
          [],
        ),
        returnValue: _i2.Future<Set<String>>.value(<String>{}),
      ) as _i2.Future<Set<String>>);

  @override
  _i2.Future<bool> has(String? key) => (super.noSuchMethod(
        Invocation.method(
          #has,
          [key],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<void> remove(String? key) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [key],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<String?> readStringOrNull(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readStringOrNull,
          [key],
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<String> readStringOr(
    String? key,
    String? fallback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #readStringOr,
          [
            key,
            fallback,
          ],
        ),
        returnValue: _i2.Future<String>.value(_i16.dummyValue<String>(
          this,
          Invocation.method(
            #readStringOr,
            [
              key,
              fallback,
            ],
          ),
        )),
      ) as _i2.Future<String>);

  @override
  _i2.Future<String> readString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readString,
          [key],
        ),
        returnValue: _i2.Future<String>.value(_i16.dummyValue<String>(
          this,
          Invocation.method(
            #readString,
            [key],
          ),
        )),
      ) as _i2.Future<String>);

  @override
  _i2.Future<void> writeString(
    String? key,
    String? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeString,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<bool?> readBoolOrNull(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readBoolOrNull,
          [key],
        ),
        returnValue: _i2.Future<bool?>.value(),
      ) as _i2.Future<bool?>);

  @override
  _i2.Future<bool> readBoolOr(
    String? key,
    bool? or,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #readBoolOr,
          [
            key,
            or,
          ],
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<void> writeBool(
    String? key,
    bool? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeBool,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<Map<dynamic, dynamic>?> readMapOrNull(String? key) =>
      (super.noSuchMethod(
        Invocation.method(
          #readMapOrNull,
          [key],
        ),
        returnValue: _i2.Future<Map<dynamic, dynamic>?>.value(),
      ) as _i2.Future<Map<dynamic, dynamic>?>);

  @override
  _i2.Future<Map<dynamic, dynamic>> readMap(String? key) => (super.noSuchMethod(
        Invocation.method(
          #readMap,
          [key],
        ),
        returnValue:
            _i2.Future<Map<dynamic, dynamic>>.value(<dynamic, dynamic>{}),
      ) as _i2.Future<Map<dynamic, dynamic>>);

  @override
  _i2.Future<void> writeMap(
    String? key,
    Map<dynamic, dynamic>? value,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #writeMap,
          [
            key,
            value,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);
}

/// A class which mocks [AuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthRepository extends _i1.Mock implements _i14.AuthRepository {
  MockAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>.value(
                _FakeEither_2<_i18.Failure, _i19.AuthResponseEntity>(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>);

  @override
  _i2.Future<
      _i4.Either<_i18.Failure, _i19.AuthResponseEntity>> passwordLessLogin(
          String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #passwordLessLogin,
          [token],
        ),
        returnValue:
            _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>.value(
                _FakeEither_2<_i18.Failure, _i19.AuthResponseEntity>(
          this,
          Invocation.method(
            #passwordLessLogin,
            [token],
          ),
        )),
      ) as _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>);

  @override
  _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>> signup(
    String? email,
    String? password,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [
            email,
            password,
            name,
          ],
        ),
        returnValue:
            _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>.value(
                _FakeEither_2<_i18.Failure, _i19.AuthResponseEntity>(
          this,
          Invocation.method(
            #signup,
            [
              email,
              password,
              name,
            ],
          ),
        )),
      ) as _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>);

  @override
  _i2.Future<_i4.Either<_i18.Failure, void>> forgetPassword(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #forgetPassword,
          [email],
        ),
        returnValue: _i2.Future<_i4.Either<_i18.Failure, void>>.value(
            _FakeEither_2<_i18.Failure, void>(
          this,
          Invocation.method(
            #forgetPassword,
            [email],
          ),
        )),
      ) as _i2.Future<_i4.Either<_i18.Failure, void>>);

  @override
  _i2.Future<_i4.Either<_i18.Failure, String>> confirmOtp(
    String? email,
    String? otp,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmOtp,
          [
            email,
            otp,
          ],
        ),
        returnValue: _i2.Future<_i4.Either<_i18.Failure, String>>.value(
            _FakeEither_2<_i18.Failure, String>(
          this,
          Invocation.method(
            #confirmOtp,
            [
              email,
              otp,
            ],
          ),
        )),
      ) as _i2.Future<_i4.Either<_i18.Failure, String>>);

  @override
  _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>> resetPassword(
    String? token,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [
            token,
            password,
          ],
        ),
        returnValue:
            _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>.value(
                _FakeEither_2<_i18.Failure, _i19.AuthResponseEntity>(
          this,
          Invocation.method(
            #resetPassword,
            [
              token,
              password,
            ],
          ),
        )),
      ) as _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>);
}

/// A class which mocks [AuthDatasource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthDatasource extends _i1.Mock implements _i20.AuthDatasource {
  MockAuthDatasource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Future<_i5.AuthResponseModel> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue:
            _i2.Future<_i5.AuthResponseModel>.value(_FakeAuthResponseModel_3(
          this,
          Invocation.method(
            #login,
            [
              email,
              password,
            ],
          ),
        )),
      ) as _i2.Future<_i5.AuthResponseModel>);

  @override
  _i2.Future<_i5.AuthResponseModel> passwordLessLogin(String? token) =>
      (super.noSuchMethod(
        Invocation.method(
          #passwordLessLogin,
          [token],
        ),
        returnValue:
            _i2.Future<_i5.AuthResponseModel>.value(_FakeAuthResponseModel_3(
          this,
          Invocation.method(
            #passwordLessLogin,
            [token],
          ),
        )),
      ) as _i2.Future<_i5.AuthResponseModel>);

  @override
  _i2.Future<_i5.AuthResponseModel> signup(
    String? email,
    String? password,
    String? name,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #signup,
          [
            email,
            password,
            name,
          ],
        ),
        returnValue:
            _i2.Future<_i5.AuthResponseModel>.value(_FakeAuthResponseModel_3(
          this,
          Invocation.method(
            #signup,
            [
              email,
              password,
              name,
            ],
          ),
        )),
      ) as _i2.Future<_i5.AuthResponseModel>);

  @override
  _i2.Future<void> forgetPassword(String? email) => (super.noSuchMethod(
        Invocation.method(
          #forgetPassword,
          [email],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<String> confirmOtp(
    String? email,
    String? otp,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #confirmOtp,
          [
            email,
            otp,
          ],
        ),
        returnValue: _i2.Future<String>.value(_i16.dummyValue<String>(
          this,
          Invocation.method(
            #confirmOtp,
            [
              email,
              otp,
            ],
          ),
        )),
      ) as _i2.Future<String>);

  @override
  _i2.Future<_i5.AuthResponseModel> resetPassword(
    String? token,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #resetPassword,
          [
            token,
            password,
          ],
        ),
        returnValue:
            _i2.Future<_i5.AuthResponseModel>.value(_FakeAuthResponseModel_3(
          this,
          Invocation.method(
            #resetPassword,
            [
              token,
              password,
            ],
          ),
        )),
      ) as _i2.Future<_i5.AuthResponseModel>);
}

/// A class which mocks [FlutterSecureStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockFlutterSecureStorage extends _i1.Mock
    implements _i3.FlutterSecureStorage {
  MockFlutterSecureStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.IOSOptions get iOptions => (super.noSuchMethod(
        Invocation.getter(#iOptions),
        returnValue: _FakeIOSOptions_4(
          this,
          Invocation.getter(#iOptions),
        ),
      ) as _i3.IOSOptions);

  @override
  _i3.AndroidOptions get aOptions => (super.noSuchMethod(
        Invocation.getter(#aOptions),
        returnValue: _FakeAndroidOptions_5(
          this,
          Invocation.getter(#aOptions),
        ),
      ) as _i3.AndroidOptions);

  @override
  _i3.LinuxOptions get lOptions => (super.noSuchMethod(
        Invocation.getter(#lOptions),
        returnValue: _FakeLinuxOptions_6(
          this,
          Invocation.getter(#lOptions),
        ),
      ) as _i3.LinuxOptions);

  @override
  _i3.WindowsOptions get wOptions => (super.noSuchMethod(
        Invocation.getter(#wOptions),
        returnValue: _FakeWindowsOptions_7(
          this,
          Invocation.getter(#wOptions),
        ),
      ) as _i3.WindowsOptions);

  @override
  _i3.WebOptions get webOptions => (super.noSuchMethod(
        Invocation.getter(#webOptions),
        returnValue: _FakeWebOptions_8(
          this,
          Invocation.getter(#webOptions),
        ),
      ) as _i3.WebOptions);

  @override
  _i3.MacOsOptions get mOptions => (super.noSuchMethod(
        Invocation.getter(#mOptions),
        returnValue: _FakeMacOsOptions_9(
          this,
          Invocation.getter(#mOptions),
        ),
      ) as _i3.MacOsOptions);

  @override
  void registerListener({
    required String? key,
    required _i21.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #registerListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterListener({
    required String? key,
    required _i21.ValueChanged<String?>? listener,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterListener,
          [],
          {
            #key: key,
            #listener: listener,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListenersForKey({required String? key}) =>
      super.noSuchMethod(
        Invocation.method(
          #unregisterAllListenersForKey,
          [],
          {#key: key},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void unregisterAllListeners() => super.noSuchMethod(
        Invocation.method(
          #unregisterAllListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Future<void> write({
    required String? key,
    required String? value,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #write,
          [],
          {
            #key: key,
            #value: value,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<String?> read({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #read,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<String?>.value(),
      ) as _i2.Future<String?>);

  @override
  _i2.Future<bool> containsKey({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #containsKey,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<bool>.value(false),
      ) as _i2.Future<bool>);

  @override
  _i2.Future<void> delete({
    required String? key,
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [],
          {
            #key: key,
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<Map<String, String>> readAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #readAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<Map<String, String>>.value(<String, String>{}),
      ) as _i2.Future<Map<String, String>>);

  @override
  _i2.Future<void> deleteAll({
    _i3.IOSOptions? iOptions,
    _i3.AndroidOptions? aOptions,
    _i3.LinuxOptions? lOptions,
    _i3.WebOptions? webOptions,
    _i3.MacOsOptions? mOptions,
    _i3.WindowsOptions? wOptions,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteAll,
          [],
          {
            #iOptions: iOptions,
            #aOptions: aOptions,
            #lOptions: lOptions,
            #webOptions: webOptions,
            #mOptions: mOptions,
            #wOptions: wOptions,
          },
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  _i2.Future<bool?> isCupertinoProtectedDataAvailable() => (super.noSuchMethod(
        Invocation.method(
          #isCupertinoProtectedDataAvailable,
          [],
        ),
        returnValue: _i2.Future<bool?>.value(),
      ) as _i2.Future<bool?>);
}

/// A class which mocks [Dio].
///
/// See the documentation for Mockito's code generation for more information.
class MockDio extends _i1.Mock implements _i11.Dio {
  MockDio() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.BaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeBaseOptions_10(
          this,
          Invocation.getter(#options),
        ),
      ) as _i6.BaseOptions);

  @override
  set options(_i6.BaseOptions? _options) => super.noSuchMethod(
        Invocation.setter(
          #options,
          _options,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.HttpClientAdapter get httpClientAdapter => (super.noSuchMethod(
        Invocation.getter(#httpClientAdapter),
        returnValue: _FakeHttpClientAdapter_11(
          this,
          Invocation.getter(#httpClientAdapter),
        ),
      ) as _i7.HttpClientAdapter);

  @override
  set httpClientAdapter(_i7.HttpClientAdapter? _httpClientAdapter) =>
      super.noSuchMethod(
        Invocation.setter(
          #httpClientAdapter,
          _httpClientAdapter,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Transformer get transformer => (super.noSuchMethod(
        Invocation.getter(#transformer),
        returnValue: _FakeTransformer_12(
          this,
          Invocation.getter(#transformer),
        ),
      ) as _i8.Transformer);

  @override
  set transformer(_i8.Transformer? _transformer) => super.noSuchMethod(
        Invocation.setter(
          #transformer,
          _transformer,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Interceptors get interceptors => (super.noSuchMethod(
        Invocation.getter(#interceptors),
        returnValue: _FakeInterceptors_13(
          this,
          Invocation.getter(#interceptors),
        ),
      ) as _i9.Interceptors);

  @override
  void close({bool? force = false}) => super.noSuchMethod(
        Invocation.method(
          #close,
          [],
          {#force: force},
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i2.Future<_i10.Response<T>> head<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i22.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #head,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #head,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> headUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i22.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #headUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #headUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> get<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i22.CancelToken? cancelToken,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #get,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> getUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i22.CancelToken? cancelToken,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #getUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> post<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i22.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #post,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> postUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i22.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #postUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #postUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> put<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i22.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #put,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #put,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> putUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i22.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #putUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #putUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> patch<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i22.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patch,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #patch,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> patchUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i22.CancelToken? cancelToken,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #patchUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #patchUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> delete<T>(
    String? path, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i6.Options? options,
    _i22.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [path],
          {
            #data: data,
            #queryParameters: queryParameters,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #delete,
            [path],
            {
              #data: data,
              #queryParameters: queryParameters,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> deleteUri<T>(
    Uri? uri, {
    Object? data,
    _i6.Options? options,
    _i22.CancelToken? cancelToken,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteUri,
          [uri],
          {
            #data: data,
            #options: options,
            #cancelToken: cancelToken,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #deleteUri,
            [uri],
            {
              #data: data,
              #options: options,
              #cancelToken: cancelToken,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<dynamic>> download(
    String? urlPath,
    dynamic savePath, {
    _i6.ProgressCallback? onReceiveProgress,
    Map<String, dynamic>? queryParameters,
    _i22.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i6.FileAccessMode? fileAccessMode = _i6.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #download,
          [
            urlPath,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #fileAccessMode: fileAccessMode,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i2.Future<_i10.Response<dynamic>>.value(_FakeResponse_14<dynamic>(
          this,
          Invocation.method(
            #download,
            [
              urlPath,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #fileAccessMode: fileAccessMode,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<dynamic>>);

  @override
  _i2.Future<_i10.Response<dynamic>> downloadUri(
    Uri? uri,
    dynamic savePath, {
    _i6.ProgressCallback? onReceiveProgress,
    _i22.CancelToken? cancelToken,
    bool? deleteOnError = true,
    _i6.FileAccessMode? fileAccessMode = _i6.FileAccessMode.write,
    String? lengthHeader = 'content-length',
    Object? data,
    _i6.Options? options,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #downloadUri,
          [
            uri,
            savePath,
          ],
          {
            #onReceiveProgress: onReceiveProgress,
            #cancelToken: cancelToken,
            #deleteOnError: deleteOnError,
            #fileAccessMode: fileAccessMode,
            #lengthHeader: lengthHeader,
            #data: data,
            #options: options,
          },
        ),
        returnValue:
            _i2.Future<_i10.Response<dynamic>>.value(_FakeResponse_14<dynamic>(
          this,
          Invocation.method(
            #downloadUri,
            [
              uri,
              savePath,
            ],
            {
              #onReceiveProgress: onReceiveProgress,
              #cancelToken: cancelToken,
              #deleteOnError: deleteOnError,
              #fileAccessMode: fileAccessMode,
              #lengthHeader: lengthHeader,
              #data: data,
              #options: options,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<dynamic>>);

  @override
  _i2.Future<_i10.Response<T>> request<T>(
    String? url, {
    Object? data,
    Map<String, dynamic>? queryParameters,
    _i22.CancelToken? cancelToken,
    _i6.Options? options,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #request,
          [url],
          {
            #data: data,
            #queryParameters: queryParameters,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #request,
            [url],
            {
              #data: data,
              #queryParameters: queryParameters,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> requestUri<T>(
    Uri? uri, {
    Object? data,
    _i22.CancelToken? cancelToken,
    _i6.Options? options,
    _i6.ProgressCallback? onSendProgress,
    _i6.ProgressCallback? onReceiveProgress,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #requestUri,
          [uri],
          {
            #data: data,
            #cancelToken: cancelToken,
            #options: options,
            #onSendProgress: onSendProgress,
            #onReceiveProgress: onReceiveProgress,
          },
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #requestUri,
            [uri],
            {
              #data: data,
              #cancelToken: cancelToken,
              #options: options,
              #onSendProgress: onSendProgress,
              #onReceiveProgress: onReceiveProgress,
            },
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i2.Future<_i10.Response<T>> fetch<T>(_i6.RequestOptions? requestOptions) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [requestOptions],
        ),
        returnValue: _i2.Future<_i10.Response<T>>.value(_FakeResponse_14<T>(
          this,
          Invocation.method(
            #fetch,
            [requestOptions],
          ),
        )),
      ) as _i2.Future<_i10.Response<T>>);

  @override
  _i11.Dio clone({
    _i6.BaseOptions? options,
    _i9.Interceptors? interceptors,
    _i7.HttpClientAdapter? httpClientAdapter,
    _i8.Transformer? transformer,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #clone,
          [],
          {
            #options: options,
            #interceptors: interceptors,
            #httpClientAdapter: httpClientAdapter,
            #transformer: transformer,
          },
        ),
        returnValue: _FakeDio_15(
          this,
          Invocation.method(
            #clone,
            [],
            {
              #options: options,
              #interceptors: interceptors,
              #httpClientAdapter: httpClientAdapter,
              #transformer: transformer,
            },
          ),
        ),
      ) as _i11.Dio);
}

/// A class which mocks [LanguageInterceptor].
///
/// See the documentation for Mockito's code generation for more information.
class MockLanguageInterceptor extends _i1.Mock
    implements _i23.LanguageInterceptor {
  MockLanguageInterceptor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i12.Locale get locale => (super.noSuchMethod(
        Invocation.getter(#locale),
        returnValue: _FakeLocale_16(
          this,
          Invocation.getter(#locale),
        ),
      ) as _i12.Locale);

  @override
  void onRequest(
    _i6.RequestOptions? options,
    _i9.RequestInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onRequest,
          [
            options,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onResponse(
    _i10.Response<dynamic>? response,
    _i9.ResponseInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onResponse,
          [
            response,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    _i11.DioException? err,
    _i9.ErrorInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            err,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TokenInterceptor].
///
/// See the documentation for Mockito's code generation for more information.
class MockTokenInterceptor extends _i1.Mock implements _i24.TokenInterceptor {
  MockTokenInterceptor() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i13.CacheHelper get cacheHelper => (super.noSuchMethod(
        Invocation.getter(#cacheHelper),
        returnValue: _FakeCacheHelper_17(
          this,
          Invocation.getter(#cacheHelper),
        ),
      ) as _i13.CacheHelper);

  @override
  _i2.Future<void> onRequest(
    _i6.RequestOptions? options,
    _i9.RequestInterceptorHandler? handler,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #onRequest,
          [
            options,
            handler,
          ],
        ),
        returnValue: _i2.Future<void>.value(),
        returnValueForMissingStub: _i2.Future<void>.value(),
      ) as _i2.Future<void>);

  @override
  void onResponse(
    _i10.Response<dynamic>? response,
    _i9.ResponseInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onResponse,
          [
            response,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onError(
    _i11.DioException? err,
    _i9.ErrorInterceptorHandler? handler,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #onError,
          [
            err,
            handler,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [Interceptors].
///
/// See the documentation for Mockito's code generation for more information.
class MockInterceptors extends _i1.Mock implements _i9.Interceptors {
  MockInterceptors() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get length => (super.noSuchMethod(
        Invocation.getter(#length),
        returnValue: 0,
      ) as int);

  @override
  set length(int? newLength) => super.noSuchMethod(
        Invocation.setter(
          #length,
          newLength,
        ),
        returnValueForMissingStub: null,
      );

  @override
  Iterator<_i9.Interceptor> get iterator => (super.noSuchMethod(
        Invocation.getter(#iterator),
        returnValue: _FakeIterator_18<_i9.Interceptor>(
          this,
          Invocation.getter(#iterator),
        ),
      ) as Iterator<_i9.Interceptor>);

  @override
  bool get isEmpty => (super.noSuchMethod(
        Invocation.getter(#isEmpty),
        returnValue: false,
      ) as bool);

  @override
  bool get isNotEmpty => (super.noSuchMethod(
        Invocation.getter(#isNotEmpty),
        returnValue: false,
      ) as bool);

  @override
  _i9.Interceptor get first => (super.noSuchMethod(
        Invocation.getter(#first),
        returnValue: _FakeInterceptor_19(
          this,
          Invocation.getter(#first),
        ),
      ) as _i9.Interceptor);

  @override
  set first(_i9.Interceptor? value) => super.noSuchMethod(
        Invocation.setter(
          #first,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Interceptor get last => (super.noSuchMethod(
        Invocation.getter(#last),
        returnValue: _FakeInterceptor_19(
          this,
          Invocation.getter(#last),
        ),
      ) as _i9.Interceptor);

  @override
  set last(_i9.Interceptor? value) => super.noSuchMethod(
        Invocation.setter(
          #last,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Interceptor get single => (super.noSuchMethod(
        Invocation.getter(#single),
        returnValue: _FakeInterceptor_19(
          this,
          Invocation.getter(#single),
        ),
      ) as _i9.Interceptor);

  @override
  Iterable<_i9.Interceptor> get reversed => (super.noSuchMethod(
        Invocation.getter(#reversed),
        returnValue: <_i9.Interceptor>[],
      ) as Iterable<_i9.Interceptor>);

  @override
  _i9.Interceptor operator [](int? index) => (super.noSuchMethod(
        Invocation.method(
          #[],
          [index],
        ),
        returnValue: _FakeInterceptor_19(
          this,
          Invocation.method(
            #[],
            [index],
          ),
        ),
      ) as _i9.Interceptor);

  @override
  void operator []=(
    int? index,
    _i9.Interceptor? value,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #[]=,
          [
            index,
            value,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void clear({bool? keepImplyContentTypeInterceptor = true}) =>
      super.noSuchMethod(
        Invocation.method(
          #clear,
          [],
          {#keepImplyContentTypeInterceptor: keepImplyContentTypeInterceptor},
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeImplyContentTypeInterceptor() => super.noSuchMethod(
        Invocation.method(
          #removeImplyContentTypeInterceptor,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Interceptor elementAt(int? index) => (super.noSuchMethod(
        Invocation.method(
          #elementAt,
          [index],
        ),
        returnValue: _FakeInterceptor_19(
          this,
          Invocation.method(
            #elementAt,
            [index],
          ),
        ),
      ) as _i9.Interceptor);

  @override
  Iterable<_i9.Interceptor> followedBy(Iterable<_i9.Interceptor>? other) =>
      (super.noSuchMethod(
        Invocation.method(
          #followedBy,
          [other],
        ),
        returnValue: <_i9.Interceptor>[],
      ) as Iterable<_i9.Interceptor>);

  @override
  void forEach(void Function(_i9.Interceptor)? action) => super.noSuchMethod(
        Invocation.method(
          #forEach,
          [action],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool contains(Object? element) => (super.noSuchMethod(
        Invocation.method(
          #contains,
          [element],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool every(bool Function(_i9.Interceptor)? test) => (super.noSuchMethod(
        Invocation.method(
          #every,
          [test],
        ),
        returnValue: false,
      ) as bool);

  @override
  bool any(bool Function(_i9.Interceptor)? test) => (super.noSuchMethod(
        Invocation.method(
          #any,
          [test],
        ),
        returnValue: false,
      ) as bool);

  @override
  _i9.Interceptor firstWhere(
    bool Function(_i9.Interceptor)? test, {
    _i9.Interceptor Function()? orElse,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #firstWhere,
          [test],
          {#orElse: orElse},
        ),
        returnValue: _FakeInterceptor_19(
          this,
          Invocation.method(
            #firstWhere,
            [test],
            {#orElse: orElse},
          ),
        ),
      ) as _i9.Interceptor);

  @override
  _i9.Interceptor lastWhere(
    bool Function(_i9.Interceptor)? test, {
    _i9.Interceptor Function()? orElse,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #lastWhere,
          [test],
          {#orElse: orElse},
        ),
        returnValue: _FakeInterceptor_19(
          this,
          Invocation.method(
            #lastWhere,
            [test],
            {#orElse: orElse},
          ),
        ),
      ) as _i9.Interceptor);

  @override
  _i9.Interceptor singleWhere(
    bool Function(_i9.Interceptor)? test, {
    _i9.Interceptor Function()? orElse,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #singleWhere,
          [test],
          {#orElse: orElse},
        ),
        returnValue: _FakeInterceptor_19(
          this,
          Invocation.method(
            #singleWhere,
            [test],
            {#orElse: orElse},
          ),
        ),
      ) as _i9.Interceptor);

  @override
  String join([String? separator = '']) => (super.noSuchMethod(
        Invocation.method(
          #join,
          [separator],
        ),
        returnValue: _i16.dummyValue<String>(
          this,
          Invocation.method(
            #join,
            [separator],
          ),
        ),
      ) as String);

  @override
  Iterable<_i9.Interceptor> where(bool Function(_i9.Interceptor)? test) =>
      (super.noSuchMethod(
        Invocation.method(
          #where,
          [test],
        ),
        returnValue: <_i9.Interceptor>[],
      ) as Iterable<_i9.Interceptor>);

  @override
  Iterable<T> whereType<T>() => (super.noSuchMethod(
        Invocation.method(
          #whereType,
          [],
        ),
        returnValue: <T>[],
      ) as Iterable<T>);

  @override
  Iterable<T> map<T>(T Function(_i9.Interceptor)? f) => (super.noSuchMethod(
        Invocation.method(
          #map,
          [f],
        ),
        returnValue: <T>[],
      ) as Iterable<T>);

  @override
  Iterable<T> expand<T>(Iterable<T> Function(_i9.Interceptor)? f) =>
      (super.noSuchMethod(
        Invocation.method(
          #expand,
          [f],
        ),
        returnValue: <T>[],
      ) as Iterable<T>);

  @override
  _i9.Interceptor reduce(
          _i9.Interceptor Function(
            _i9.Interceptor,
            _i9.Interceptor,
          )? combine) =>
      (super.noSuchMethod(
        Invocation.method(
          #reduce,
          [combine],
        ),
        returnValue: _FakeInterceptor_19(
          this,
          Invocation.method(
            #reduce,
            [combine],
          ),
        ),
      ) as _i9.Interceptor);

  @override
  T fold<T>(
    T? initialValue,
    T Function(
      T,
      _i9.Interceptor,
    )? combine,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #fold,
          [
            initialValue,
            combine,
          ],
        ),
        returnValue: _i16.dummyValue<T>(
          this,
          Invocation.method(
            #fold,
            [
              initialValue,
              combine,
            ],
          ),
        ),
      ) as T);

  @override
  Iterable<_i9.Interceptor> skip(int? count) => (super.noSuchMethod(
        Invocation.method(
          #skip,
          [count],
        ),
        returnValue: <_i9.Interceptor>[],
      ) as Iterable<_i9.Interceptor>);

  @override
  Iterable<_i9.Interceptor> skipWhile(bool Function(_i9.Interceptor)? test) =>
      (super.noSuchMethod(
        Invocation.method(
          #skipWhile,
          [test],
        ),
        returnValue: <_i9.Interceptor>[],
      ) as Iterable<_i9.Interceptor>);

  @override
  Iterable<_i9.Interceptor> take(int? count) => (super.noSuchMethod(
        Invocation.method(
          #take,
          [count],
        ),
        returnValue: <_i9.Interceptor>[],
      ) as Iterable<_i9.Interceptor>);

  @override
  Iterable<_i9.Interceptor> takeWhile(bool Function(_i9.Interceptor)? test) =>
      (super.noSuchMethod(
        Invocation.method(
          #takeWhile,
          [test],
        ),
        returnValue: <_i9.Interceptor>[],
      ) as Iterable<_i9.Interceptor>);

  @override
  List<_i9.Interceptor> toList({bool? growable = true}) => (super.noSuchMethod(
        Invocation.method(
          #toList,
          [],
          {#growable: growable},
        ),
        returnValue: <_i9.Interceptor>[],
      ) as List<_i9.Interceptor>);

  @override
  Set<_i9.Interceptor> toSet() => (super.noSuchMethod(
        Invocation.method(
          #toSet,
          [],
        ),
        returnValue: <_i9.Interceptor>{},
      ) as Set<_i9.Interceptor>);

  @override
  void add(_i9.Interceptor? element) => super.noSuchMethod(
        Invocation.method(
          #add,
          [element],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addAll(Iterable<_i9.Interceptor>? iterable) => super.noSuchMethod(
        Invocation.method(
          #addAll,
          [iterable],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool remove(Object? element) => (super.noSuchMethod(
        Invocation.method(
          #remove,
          [element],
        ),
        returnValue: false,
      ) as bool);

  @override
  void removeWhere(bool Function(_i9.Interceptor)? test) => super.noSuchMethod(
        Invocation.method(
          #removeWhere,
          [test],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void retainWhere(bool Function(_i9.Interceptor)? test) => super.noSuchMethod(
        Invocation.method(
          #retainWhere,
          [test],
        ),
        returnValueForMissingStub: null,
      );

  @override
  List<R> cast<R>() => (super.noSuchMethod(
        Invocation.method(
          #cast,
          [],
        ),
        returnValue: <R>[],
      ) as List<R>);

  @override
  _i9.Interceptor removeLast() => (super.noSuchMethod(
        Invocation.method(
          #removeLast,
          [],
        ),
        returnValue: _FakeInterceptor_19(
          this,
          Invocation.method(
            #removeLast,
            [],
          ),
        ),
      ) as _i9.Interceptor);

  @override
  void sort(
          [int Function(
            _i9.Interceptor,
            _i9.Interceptor,
          )? compare]) =>
      super.noSuchMethod(
        Invocation.method(
          #sort,
          [compare],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void shuffle([_i25.Random? random]) => super.noSuchMethod(
        Invocation.method(
          #shuffle,
          [random],
        ),
        returnValueForMissingStub: null,
      );

  @override
  Map<int, _i9.Interceptor> asMap() => (super.noSuchMethod(
        Invocation.method(
          #asMap,
          [],
        ),
        returnValue: <int, _i9.Interceptor>{},
      ) as Map<int, _i9.Interceptor>);

  @override
  List<_i9.Interceptor> operator +(List<_i9.Interceptor>? other) =>
      (super.noSuchMethod(
        Invocation.method(
          #+,
          [other],
        ),
        returnValue: <_i9.Interceptor>[],
      ) as List<_i9.Interceptor>);

  @override
  List<_i9.Interceptor> sublist(
    int? start, [
    int? end,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #sublist,
          [
            start,
            end,
          ],
        ),
        returnValue: <_i9.Interceptor>[],
      ) as List<_i9.Interceptor>);

  @override
  Iterable<_i9.Interceptor> getRange(
    int? start,
    int? end,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRange,
          [
            start,
            end,
          ],
        ),
        returnValue: <_i9.Interceptor>[],
      ) as Iterable<_i9.Interceptor>);

  @override
  void removeRange(
    int? start,
    int? end,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeRange,
          [
            start,
            end,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void fillRange(
    int? start,
    int? end, [
    _i9.Interceptor? fill,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #fillRange,
          [
            start,
            end,
            fill,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setRange(
    int? start,
    int? end,
    Iterable<_i9.Interceptor>? iterable, [
    int? skipCount = 0,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #setRange,
          [
            start,
            end,
            iterable,
            skipCount,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void replaceRange(
    int? start,
    int? end,
    Iterable<_i9.Interceptor>? newContents,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #replaceRange,
          [
            start,
            end,
            newContents,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  int indexOf(
    Object? element, [
    int? start = 0,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #indexOf,
          [
            element,
            start,
          ],
        ),
        returnValue: 0,
      ) as int);

  @override
  int indexWhere(
    bool Function(_i9.Interceptor)? test, [
    int? start = 0,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #indexWhere,
          [
            test,
            start,
          ],
        ),
        returnValue: 0,
      ) as int);

  @override
  int lastIndexOf(
    Object? element, [
    int? start,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #lastIndexOf,
          [
            element,
            start,
          ],
        ),
        returnValue: 0,
      ) as int);

  @override
  int lastIndexWhere(
    bool Function(_i9.Interceptor)? test, [
    int? start,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #lastIndexWhere,
          [
            test,
            start,
          ],
        ),
        returnValue: 0,
      ) as int);

  @override
  void insert(
    int? index,
    _i9.Interceptor? element,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #insert,
          [
            index,
            element,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i9.Interceptor removeAt(int? index) => (super.noSuchMethod(
        Invocation.method(
          #removeAt,
          [index],
        ),
        returnValue: _FakeInterceptor_19(
          this,
          Invocation.method(
            #removeAt,
            [index],
          ),
        ),
      ) as _i9.Interceptor);

  @override
  void insertAll(
    int? index,
    Iterable<_i9.Interceptor>? iterable,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #insertAll,
          [
            index,
            iterable,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setAll(
    int? index,
    Iterable<_i9.Interceptor>? iterable,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setAll,
          [
            index,
            iterable,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [LoginUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginUsecase extends _i1.Mock implements _i26.LoginUsecase {
  MockLoginUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_20(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i14.AuthRepository);

  @override
  _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>> call(
          _i26.LoginParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>.value(
                _FakeEither_2<_i18.Failure, _i19.AuthResponseEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>);
}

/// A class which mocks [SignupUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockSignupUsecase extends _i1.Mock implements _i27.SignupUsecase {
  MockSignupUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_20(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i14.AuthRepository);

  @override
  _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>> call(
          _i27.SignupParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>.value(
                _FakeEither_2<_i18.Failure, _i19.AuthResponseEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>);
}

/// A class which mocks [ResetPasswordUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockResetPasswordUsecase extends _i1.Mock
    implements _i28.ResetPasswordUsecase {
  MockResetPasswordUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_20(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i14.AuthRepository);

  @override
  _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>> call(
          _i28.ResetPasswordParams? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue:
            _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>.value(
                _FakeEither_2<_i18.Failure, _i19.AuthResponseEntity>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i2.Future<_i4.Either<_i18.Failure, _i19.AuthResponseEntity>>);
}

/// A class which mocks [ForgetPasswordUsecase].
///
/// See the documentation for Mockito's code generation for more information.
class MockForgetPasswordUsecase extends _i1.Mock
    implements _i29.ForgetPasswordUsecase {
  MockForgetPasswordUsecase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i14.AuthRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAuthRepository_20(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i14.AuthRepository);

  @override
  _i2.Future<_i4.Either<_i18.Failure, void>> call(String? params) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [params],
        ),
        returnValue: _i2.Future<_i4.Either<_i18.Failure, void>>.value(
            _FakeEither_2<_i18.Failure, void>(
          this,
          Invocation.method(
            #call,
            [params],
          ),
        )),
      ) as _i2.Future<_i4.Either<_i18.Failure, void>>);
}
